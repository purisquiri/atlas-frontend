[{"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js":"1","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js":"2","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js":"3","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/LoginContainer.js":"4","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js":"5","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/SignUpContainer.js":"6","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Cover.js":"7","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Globe.js":"8","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Navbar.js":"9","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/FavoritesContainer.js":"10","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Search.js":"11","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js":"12","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Logout.js":"13","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Reviews.js":"14","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Modal.js":"15","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/AddReview.js":"16","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewModal.js":"17","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/BaseUrl.js":"18"},{"size":538,"mtime":1610077133871,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1608828731125,"results":"21","hashOfConfig":"20"},{"size":1292,"mtime":1609980941854,"results":"22","hashOfConfig":"20"},{"size":4609,"mtime":1612903089253,"results":"23","hashOfConfig":"20"},{"size":3421,"mtime":1612903047529,"results":"24","hashOfConfig":"20"},{"size":5098,"mtime":1612903207070,"results":"25","hashOfConfig":"20"},{"size":1008,"mtime":1610126044438,"results":"26","hashOfConfig":"20"},{"size":58624,"mtime":1609363402937,"results":"27","hashOfConfig":"20"},{"size":7485,"mtime":1612893767710,"results":"28","hashOfConfig":"20"},{"size":1137,"mtime":1612902948605,"results":"29","hashOfConfig":"20"},{"size":22315,"mtime":1612903582964,"results":"30","hashOfConfig":"20"},{"size":1489,"mtime":1610125303288,"results":"31","hashOfConfig":"20"},{"size":277,"mtime":1610058092990,"results":"32","hashOfConfig":"20"},{"size":1164,"mtime":1612903134158,"results":"33","hashOfConfig":"20"},{"size":2836,"mtime":1610055560805,"results":"34","hashOfConfig":"20"},{"size":1710,"mtime":1612902782147,"results":"35","hashOfConfig":"20"},{"size":3404,"mtime":1612903556458,"results":"36","hashOfConfig":"20"},{"size":300,"mtime":1612902616074,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"v29bki",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js",[],["77","78"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/LoginContainer.js",["79","80","81","82","83","84"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js",["85","86"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/SignUpContainer.js",["87","88"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Cover.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Globe.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Navbar.js",["89","90","91","92","93","94"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Logout from \"../components/Logout\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport Reviews from \"./Reviews\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nconst drawerWidth = 400;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  spanDrawer: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 15),\n    // necessary for content to be below app bar\n  },\n  name: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 14),\n    marginLeft: 20,\n    // necessary for content to be below app bar\n  },\n  nameTwo: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 14),\n    marginLeft: 20,\n    // necessary for content to be below app bar\n  },\n\n\n\n  marginAutoItem: {\n    // margin: \"auto\",\n    marginLeft: \"10px\",\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [logout, setLogout] = React.useState(false);\n  const [openReview, setReview] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const openReviews = () => {\n    setReview(true);\n    if (openReview === true) {\n      setReview(false);\n    }\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        style={{ background: \"#333\" }}\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h4\" noWrap>\n            ATLAS\n          </Typography>\n          {/* <div className={classes.marginAutoItem}>\n            Welcome {localStorage.getItem(\"username\")}\n          </div> */}\n          <Typography className={classes.marginAutoItem} variant=\"h6\" noWrap>\n            Welcome {localStorage.getItem(\"username\")}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {[\"Stories\", \"Log Out\"].map((text, index) =>\n            index === 1 ? (\n              <ListItem\n                onClick={() => setLogout(true)}\n                button\n                key={text}\n                id={index}\n              >\n                <ListItemIcon>\n                  {index % 2 === 0 ? <ChatIcon /> : <CloseIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ) : index === 0 ? (\n              <ListItem\n                onClick={() => openReviews()}\n                button\n                key={text}\n                id={index}\n              >\n                <ListItemIcon>\n                  {index % 2 === 0 ? <ChatIcon /> : <CloseIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ) : (\n              <ListItem button key={text} id={index}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <ChatIcon /> : <CloseIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n\n        {logout === true ? <Logout /> : null}\n        {openReview === true ? <Reviews /> : null}\n        <Divider />\n        <h3 className={classes.spanDrawer}>Created By: </h3>\n        <div className={classes.name}>\n          <GitHubIcon />\n          <h5><a href='https://github.com/purisquiri' target='_blank'>Mauro</a></h5>\n        </div>\n        <div className={classes.nameTwo}>\n          <GitHubIcon />\n          \n          <h5> <a href='https://github.com/jacobkagon' target='_blank'>Jacob </a> </h5>\n          \n        </div>\n\n        {/* <List>\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n    </div>\n  );\n}\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/FavoritesContainer.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Search.js",["95","96","97","98"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js",["99","100","101"],"import \"../Map.css\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport React, { useState, useEffect } from \"react\";\n\nconst MapboxGLMap = ({ countries }) => {\n  const [countryNames, newNames] = useState([\"name_en\"]);\n  const mapContainer = React.createRef();\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiamFjb2JrYWdvbiIsImEiOiJja2owZHM4NGUxbTN1MnJtd25pbHh5a2YwIn0.Ipv-6ntDnJw4WUD9ly3gcw\";\n    let firstPart = [\"in\", \"iso_3166_1_alpha_3\"];\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/jacobkagon/ckjak6kt589rb19p228nwrycv\", // stylesheet location\n      center: [15, 25],\n      zoom: 1.5,\n    });\n\n    map.on(\"load\", () => {\n      // setMap(map);\n      map.resize();\n      map.addLayer(\n        {\n          id: \"country-boundaries\",\n          source: {\n            type: \"vector\",\n            url: \"mapbox://mapbox.country-boundaries-v1\",\n          },\n          \"source-layer\": \"country_boundaries\",\n          type: \"fill\",\n          paint: {\n            \"fill-color\": \"#780000\",\n            \"fill-opacity\": 0.4,\n          },\n        },\n        \"country-label\"\n      );\n      map.setFilter(\"country-boundaries\", firstPart.concat(countries));\n      map.addControl(\n        new MapboxGeocoder({\n          accessToken: mapboxgl.accessToken,\n          mapboxgl: mapboxgl,\n        })\n      );\n    });\n  });\n\n  return <div>{<div id=\"map\"></div>}</div>;\n};\n\nexport default MapboxGLMap;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Logout.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Reviews.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Modal.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/AddReview.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewModal.js",["102"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/BaseUrl.js",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":15,"column":8,"nodeType":"109","messageId":"110","endLine":15,"endColumn":13},{"ruleId":"107","severity":1,"message":"112","line":16,"column":8,"nodeType":"109","messageId":"110","endLine":16,"endColumn":14},{"ruleId":"107","severity":1,"message":"113","line":17,"column":27,"nodeType":"109","messageId":"110","endLine":17,"endColumn":33},{"ruleId":"107","severity":1,"message":"114","line":56,"column":10,"nodeType":"109","messageId":"110","endLine":56,"endColumn":16},{"ruleId":"107","severity":1,"message":"115","line":56,"column":18,"nodeType":"109","messageId":"110","endLine":56,"endColumn":27},{"ruleId":"107","severity":1,"message":"116","line":10,"column":7,"nodeType":"109","messageId":"110","endLine":10,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":47,"column":31,"nodeType":"119","messageId":"120","endLine":47,"endColumn":33},{"ruleId":"107","severity":1,"message":"111","line":15,"column":8,"nodeType":"109","messageId":"110","endLine":15,"endColumn":13},{"ruleId":"107","severity":1,"message":"113","line":16,"column":27,"nodeType":"109","messageId":"110","endLine":16,"endColumn":33},{"ruleId":"107","severity":1,"message":"121","line":18,"column":8,"nodeType":"109","messageId":"110","endLine":18,"endColumn":17},{"ruleId":"107","severity":1,"message":"122","line":19,"column":8,"nodeType":"109","messageId":"110","endLine":19,"endColumn":16},{"ruleId":"107","severity":1,"message":"123","line":23,"column":10,"nodeType":"109","messageId":"110","endLine":23,"endColumn":15},{"ruleId":"107","severity":1,"message":"124","line":23,"column":17,"nodeType":"109","messageId":"110","endLine":23,"endColumn":27},{"ruleId":"125","severity":1,"message":"126","line":227,"column":55,"nodeType":"127","endLine":227,"endColumn":70},{"ruleId":"125","severity":1,"message":"126","line":232,"column":56,"nodeType":"127","endLine":232,"endColumn":71},{"ruleId":"107","severity":1,"message":"108","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"128","line":64,"column":9,"nodeType":"109","messageId":"110","endLine":64,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":75,"column":37,"nodeType":"119","messageId":"120","endLine":75,"endColumn":39},{"ruleId":"107","severity":1,"message":"129","line":86,"column":9,"nodeType":"109","messageId":"110","endLine":86,"endColumn":24},{"ruleId":"107","severity":1,"message":"130","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":22},{"ruleId":"107","severity":1,"message":"131","line":7,"column":24,"nodeType":"109","messageId":"110","endLine":7,"endColumn":32},{"ruleId":"107","severity":1,"message":"132","line":8,"column":9,"nodeType":"109","messageId":"110","endLine":8,"endColumn":21},{"ruleId":"107","severity":1,"message":"133","line":1,"column":28,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'signUp' is defined but never used.","'Router' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'favoritesId' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'Route' is defined but never used.","'useHistory' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'countryIds' is assigned a value but never used.","'filterCountryID' is assigned a value but never used.","'countryNames' is assigned a value but never used.","'newNames' is assigned a value but never used.","'mapContainer' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]